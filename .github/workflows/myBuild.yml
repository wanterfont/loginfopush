name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION || '1.21' }}  # 动态指定 Go 版本

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o loginfopush-${{ matrix.goos }}-${{ github.ref_name }}-${{ matrix.goarch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: loginfopush-${{ matrix.goos }}-${{ github.ref_name }}-${{ matrix.goarch }}
        path: loginfopush-${{ matrix.goos }}-${{ github.ref_name }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        pattern: '*'  # 将所有构件下载到同一目录

    - name: List artifacts
      run: ls -R ./artifacts

    - name: Create Release and Upload Assets
      if: success()
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.KK }}
      with:
        tag_name: ${{ github.ref_name }}
        files: ./artifacts/**/*  # 递归匹配所有子目录中的文件